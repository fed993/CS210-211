{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 TriArea t = new TriArea();\
\
When TriArea contains static variables, this means to create an instance of TriArea, called t, which will contain all local, non-static variables.\
\
For example:\
\
public class TriArea \{\
\
	public static double width;\
	public double height;\
\
	public double area() \{\
		return ((width * height)/2);\
	\}\
\}\
\
\'97\'97\'97\'97\'97\'97\'97\
\
public static void main(String[] args) \{\
	TriArea t = new TriArea();\
	TriArea h = new TriArea();	\
	t.height = 10;			// height is an instance variable, so only t\'92s height is set to 10\
	h.height = 11;		// height is an instance variable, so only h\'92s height is set to 10\
	t.width = 6;			// width is a static (class) variable, so both t\'92s and h\'92s width is set to 6\
	h.width = 18;			// width is a static (class) variable, so both t\'92s and h\'92s width is set to 6\
	System.out.println(t.width) // prints 18! Despite t.width being set to 6, h.width overwrote it!\
\}}